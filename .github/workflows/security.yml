name: Security

on:
  push:
  pull_request:

jobs:
  sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate CycloneDX SBOM
        run: |
          mkdir -p artifacts
          pnpm dlx @cyclonedx/cyclonedx-npm --output-format json --output-file artifacts/cyclonedx-sbom.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: cyclonedx-sbom
          path: artifacts/cyclonedx-sbom.json

  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run pnpm audit
        run: |
          mkdir -p artifacts
          set -o pipefail
          status=0
          pnpm audit --prod --audit-level=high --json > artifacts/pnpm-audit.json || status=$?
          if [ ! -s artifacts/pnpm-audit.json ]; then
            echo '{}' > artifacts/pnpm-audit.json
          fi
          echo "AUDIT_EXIT_CODE=$status" >> "$GITHUB_ENV"

      - name: Upload audit artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-audit
          path: artifacts/pnpm-audit.json

      - name: Fail on audit findings
        if: env.AUDIT_EXIT_CODE != '0'
        run: |
          echo "High severity vulnerabilities detected by pnpm audit."
          exit 1

  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Gitleaks
        run: |
          mkdir -p artifacts
          status=0
          docker run --rm \
            -v "$PWD:/repo" \
            zricethezav/gitleaks:latest detect \
            --source=/repo \
            --report-path=/repo/artifacts/gitleaks-report.json \
            --report-format=json || status=$?
          if [ ! -s artifacts/gitleaks-report.json ]; then
            echo '{}' > artifacts/gitleaks-report.json
          fi
          echo "GITLEAKS_EXIT_CODE=$status" >> "$GITHUB_ENV"

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: artifacts/gitleaks-report.json

      - name: Fail on leaked secrets
        if: env.GITLEAKS_EXIT_CODE != '0'
        run: |
          echo "Gitleaks detected potential secrets. See report for details."
          exit 1

  vulnerability-scan:
    name: Trivy File System Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy FS scan
        run: |
          mkdir -p artifacts
          status=0
          docker run --rm \
            -v "$PWD:/workspace" \
            -w /workspace \
            aquasec/trivy:0.49.1 fs \
            --format json \
            --output /workspace/artifacts/trivy-fs-report.json \
            --severity HIGH,CRITICAL \
            --exit-code 1 \
            /workspace || status=$?
          if [ ! -s artifacts/trivy-fs-report.json ]; then
            echo '{}' > artifacts/trivy-fs-report.json
          fi
          echo "TRIVY_EXIT_CODE=$status" >> "$GITHUB_ENV"

      - name: Upload Trivy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-report
          path: artifacts/trivy-fs-report.json

      - name: Fail on Trivy findings
        if: env.TRIVY_EXIT_CODE != '0'
        run: |
          echo "Trivy detected high or critical vulnerabilities. See report for details."
          exit 1
